"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../utils/util");
Page({
    data: {
        num: 0,
        time: 5,
        digit: 10,
        percent: 100,
        step: 1,
        numCheck: -1,
    },
    onLoad: function () {
    },
    start: function () {
        var _this = this;
        this.setData({
            num: util_1.genRandNum(this.data.digit),
            step: 2,
        });
        var ms = 10 * (this.data.time - 1);
        var countDown = function () {
            _this.data.percent--;
            if (_this.data.percent >= 0) {
                _this.setData({
                    percent: _this.data.percent
                });
                setTimeout(countDown, ms);
            }
            else {
                _this.setData({
                    step: 3,
                });
            }
        };
        countDown();
    },
    bindTimeInput: function (e) {
        this.setData({
            time: e.detail.value
        });
    },
    bindDigitInput: function (e) {
        this.setData({
            digit: e.detail.value
        });
    },
    bindCheckInput: function (e) {
        this.setData({
            numCheck: e.detail.value
        });
    },
    check: function () {
        if (this.data.numCheck === this.data.num) {
            wx.showModal({
                title: 'üòéüëç',
                content: 'ÊÅ≠Âñú‰Ω†ÔºåÂõûÁ≠îÊ≠£Á°ÆÔºÅ',
            });
        }
        else {
            wx.showModal({
                title: 'üòì',
                content: 'ÂæàÈÅóÊÜæÔºåÂõûÁ≠îÈîôËØØÔºÅ',
            });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbGxlbmdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2hhbGxlbmdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseUNBQThDO0FBRTlDLElBQUksQ0FBQztJQUNILElBQUksRUFBRTtRQUNKLEdBQUcsRUFBRSxDQUFDO1FBQ04sSUFBSSxFQUFFLENBQUM7UUFDUCxLQUFLLEVBQUUsRUFBRTtRQUNULE9BQU8sRUFBRSxHQUFHO1FBQ1osSUFBSSxFQUFFLENBQUM7UUFDUCxRQUFRLEVBQUUsQ0FBQyxDQUFDO0tBQ2I7SUFDRCxNQUFNO0lBRU4sQ0FBQztJQUNELEtBQUssRUFBTDtRQUFBLGlCQXlCQztRQXZCQyxJQUFJLENBQUMsT0FBUSxDQUFDO1lBQ1osR0FBRyxFQUFFLGlCQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDaEMsSUFBSSxFQUFFLENBQUM7U0FDUixDQUFDLENBQUM7UUFHSCxJQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztRQUVyQyxJQUFNLFNBQVMsR0FBRztZQUNoQixLQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ3BCLElBQUksS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksQ0FBQyxFQUFFO2dCQUMxQixLQUFJLENBQUMsT0FBUSxDQUFDO29CQUNaLE9BQU8sRUFBRSxLQUFJLENBQUMsSUFBSSxDQUFDLE9BQU87aUJBQzNCLENBQUMsQ0FBQztnQkFDSCxVQUFVLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2FBQzNCO2lCQUFNO2dCQUVMLEtBQUksQ0FBQyxPQUFRLENBQUM7b0JBQ1osSUFBSSxFQUFFLENBQUM7aUJBQ1IsQ0FBQyxDQUFDO2FBQ0o7UUFDSCxDQUFDLENBQUM7UUFDRixTQUFTLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFFRCxhQUFhLEVBQWIsVUFBYyxDQUFNO1FBQ2xCLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixJQUFJLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1NBQ3JCLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxjQUFjLEVBQWQsVUFBZSxDQUFNO1FBQ25CLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixLQUFLLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1NBQ3RCLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFDRCxjQUFjLEVBQWQsVUFBZSxDQUFNO1FBQ25CLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixRQUFRLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLO1NBQ3pCLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsS0FBSyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUN4QyxFQUFFLENBQUMsU0FBUyxDQUFDO2dCQUNYLEtBQUssRUFBRSxNQUFNO2dCQUNiLE9BQU8sRUFBRSxXQUFXO2FBQ3JCLENBQUMsQ0FBQTtTQUNIO2FBQU07WUFDTCxFQUFFLENBQUMsU0FBUyxDQUFDO2dCQUNYLEtBQUssRUFBRSxJQUFJO2dCQUNYLE9BQU8sRUFBRSxXQUFXO2FBQ3JCLENBQUMsQ0FBQTtTQUNIO0lBQ0gsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlblJhbmROdW0gfSBmcm9tICcuLi8uLi91dGlscy91dGlsJztcblxuUGFnZSh7XG4gIGRhdGE6IHtcbiAgICBudW06IDAsXG4gICAgdGltZTogNSwgLy8g6buY6K6k6K6w5b+G5pe26Ze0XG4gICAgZGlnaXQ6IDEwLCAvLyDmlbDlrZfkvY3mlbBcbiAgICBwZXJjZW50OiAxMDAsXG4gICAgc3RlcDogMSxcbiAgICBudW1DaGVjazogLTEsIC8vIOW+heagoemqjOW+heaVsOWtl1xuICB9LFxuICBvbkxvYWQoKSB7XG5cbiAgfSxcbiAgc3RhcnQoKSB7XG5cbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIG51bTogZ2VuUmFuZE51bSh0aGlzLmRhdGEuZGlnaXQpLCAvLyDnlJ/miJDmlbDlrZdcbiAgICAgIHN0ZXA6IDIsXG4gICAgfSk7XG5cbiAgICAvLyDlgJLorqHml7bpl7TpmpTml7bpl7RcbiAgICBjb25zdCBtcyA9IDEwICogKHRoaXMuZGF0YS50aW1lIC0gMSk7XG5cbiAgICBjb25zdCBjb3VudERvd24gPSAoKSA9PiB7XG4gICAgICB0aGlzLmRhdGEucGVyY2VudC0tO1xuICAgICAgaWYgKHRoaXMuZGF0YS5wZXJjZW50ID49IDApIHtcbiAgICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgICAgcGVyY2VudDogdGhpcy5kYXRhLnBlcmNlbnRcbiAgICAgICAgfSk7XG4gICAgICAgIHNldFRpbWVvdXQoY291bnREb3duLCBtcyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDorqHml7bnu5PmnZ/mmL7npLrnrKzkuInmraVcbiAgICAgICAgdGhpcy5zZXREYXRhISh7XG4gICAgICAgICAgc3RlcDogMyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcbiAgICBjb3VudERvd24oKTtcbiAgfSxcbiAgLy8g6K6w5b+G5pe26Ze057uR5a6aXG4gIGJpbmRUaW1lSW5wdXQoZTogYW55KSB7XG4gICAgdGhpcy5zZXREYXRhISh7XG4gICAgICB0aW1lOiBlLmRldGFpbC52YWx1ZVxuICAgIH0pXG4gIH0sXG4gIC8vIOaVsOWtl+S9jeaVsOe7keWumlxuICBiaW5kRGlnaXRJbnB1dChlOiBhbnkpIHtcbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIGRpZ2l0OiBlLmRldGFpbC52YWx1ZVxuICAgIH0pXG4gIH0sXG4gIGJpbmRDaGVja0lucHV0KGU6IGFueSkge1xuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgbnVtQ2hlY2s6IGUuZGV0YWlsLnZhbHVlXG4gICAgfSlcbiAgfSxcbiAgLy8g5qOA6aqM6L6T5YWl5pWw5a2X5piv5ZCm5q2j56GuXG4gIGNoZWNrKCkge1xuICAgIGlmICh0aGlzLmRhdGEubnVtQ2hlY2sgPT09IHRoaXMuZGF0YS5udW0pIHtcbiAgICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICAgIHRpdGxlOiAn8J+YjvCfkY0nLFxuICAgICAgICBjb250ZW50OiAn5oGt5Zac5L2g77yM5Zue562U5q2j56Gu77yBJyxcbiAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICAgIHRpdGxlOiAn8J+YkycsXG4gICAgICAgIGNvbnRlbnQ6ICflvojpgZfmhr7vvIzlm57nrZTplJnor6/vvIEnLFxuICAgICAgfSlcbiAgICB9XG4gIH1cbn0pIl19