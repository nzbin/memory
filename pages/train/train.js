"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var imgs_1 = require("../../utils/imgs");
var util_1 = require("../../utils/util");
Page({
    data: {
        array: [],
        index: 0,
        imgUrl: '',
        numstr: '',
    },
    onLoad: function () {
        var arr = [];
        for (var i = 1; i <= 100; i++) {
            arr.push(util_1.genNumStr(i));
        }
        this.setData({
            array: arr,
            imgUrl: imgs_1.genImgUrl(this.data.index + 1),
            numstr: util_1.genNumStr(this.data.index + 1)
        });
    },
    next: function () {
        this.data.index++;
        this.setData({
            index: util_1.transNum(this.data.index),
            imgUrl: imgs_1.genImgUrl(this.data.index + 1),
            numstr: util_1.genNumStr(this.data.index + 1)
        });
    },
    prev: function () {
        this.data.index--;
        this.setData({
            index: util_1.transNum(this.data.index),
            imgUrl: imgs_1.genImgUrl(this.data.index + 1),
            numstr: util_1.genNumStr(this.data.index + 1)
        });
    },
    bindPickerChange: function (e) {
        this.setData({
            index: parseInt(e.detail.value),
            imgUrl: imgs_1.genImgUrl(parseInt(e.detail.value) + 1),
            numstr: util_1.genNumStr(parseInt(e.detail.value) + 1)
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0cmFpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHlDQUE2QztBQUM3Qyx5Q0FBdUQ7QUFFdkQsSUFBSSxDQUFDO0lBRUgsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLEVBQWM7UUFDckIsS0FBSyxFQUFFLENBQUM7UUFDUixNQUFNLEVBQUUsRUFBRTtRQUNWLE1BQU0sRUFBRSxFQUFFO0tBQ1g7SUFFRCxNQUFNO1FBRUosSUFBTSxHQUFHLEdBQUcsRUFBYyxDQUFDO1FBQzNCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDN0IsR0FBRyxDQUFDLElBQUksQ0FBQyxnQkFBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDeEI7UUFDRCxJQUFJLENBQUMsT0FBUSxDQUFDO1lBQ1osS0FBSyxFQUFFLEdBQUc7WUFDVixNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7WUFDdEMsTUFBTSxFQUFFLGdCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ3ZDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFJO1FBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBUSxDQUFDO1lBQ1osS0FBSyxFQUFFLGVBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNoQyxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7WUFDdEMsTUFBTSxFQUFFLGdCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ3ZDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxJQUFJO1FBQ0YsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBUSxDQUFDO1lBQ1osS0FBSyxFQUFFLGVBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUNoQyxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7WUFDdEMsTUFBTSxFQUFFLGdCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ3ZDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDRCxnQkFBZ0IsWUFBQyxDQUFNO1FBRXJCLElBQUksQ0FBQyxPQUFRLENBQUM7WUFDWixLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQy9CLE1BQU0sRUFBRSxnQkFBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvQyxNQUFNLEVBQUUsZ0JBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDaEQsQ0FBQyxDQUFBO0lBQ0osQ0FBQztDQW1DRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwYWdlcy90cmFpbi90cmFpbi5qc1xuaW1wb3J0IHsgZ2VuSW1nVXJsIH0gZnJvbSAnLi4vLi4vdXRpbHMvaW1ncyc7XG5pbXBvcnQgeyB0cmFuc051bSwgZ2VuTnVtU3RyIH0gZnJvbSAnLi4vLi4vdXRpbHMvdXRpbCc7XG5cblBhZ2Uoe1xuICAvLyDpobXpnaLnmoTliJ3lp4vmlbDmja5cbiAgZGF0YToge1xuICAgIGFycmF5OiBbXSBhcyBzdHJpbmdbXSxcbiAgICBpbmRleDogMCxcbiAgICBpbWdVcmw6ICcnLFxuICAgIG51bXN0cjogJycsXG4gIH0sXG4gIC8vIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yqg6L29XG4gIG9uTG9hZCgpIHtcbiAgICAvLyDnlJ/kuqfplb/luqbkuLogMTAwIOeahOaVsOe7hFxuICAgIGNvbnN0IGFyciA9IFtdIGFzIHN0cmluZ1tdO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDEwMDsgaSsrKSB7XG4gICAgICBhcnIucHVzaChnZW5OdW1TdHIoaSkpO1xuICAgIH1cbiAgICB0aGlzLnNldERhdGEhKHtcbiAgICAgIGFycmF5OiBhcnIsXG4gICAgICBpbWdVcmw6IGdlbkltZ1VybCh0aGlzLmRhdGEuaW5kZXggKyAxKSxcbiAgICAgIG51bXN0cjogZ2VuTnVtU3RyKHRoaXMuZGF0YS5pbmRleCArIDEpXG4gICAgfSk7XG4gIH0sXG4gIC8vIOS4i+S4gOS4quaVsOWtl1xuICBuZXh0KCkge1xuICAgIHRoaXMuZGF0YS5pbmRleCsrO1xuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgaW5kZXg6IHRyYW5zTnVtKHRoaXMuZGF0YS5pbmRleCksXG4gICAgICBpbWdVcmw6IGdlbkltZ1VybCh0aGlzLmRhdGEuaW5kZXggKyAxKSxcbiAgICAgIG51bXN0cjogZ2VuTnVtU3RyKHRoaXMuZGF0YS5pbmRleCArIDEpXG4gICAgfSk7XG4gIH0sXG4gIC8vIOS4iuS4gOS4quaVsOWtl1xuICBwcmV2KCkge1xuICAgIHRoaXMuZGF0YS5pbmRleC0tO1xuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgaW5kZXg6IHRyYW5zTnVtKHRoaXMuZGF0YS5pbmRleCksXG4gICAgICBpbWdVcmw6IGdlbkltZ1VybCh0aGlzLmRhdGEuaW5kZXggKyAxKSxcbiAgICAgIG51bXN0cjogZ2VuTnVtU3RyKHRoaXMuZGF0YS5pbmRleCArIDEpXG4gICAgfSk7XG4gIH0sXG4gIGJpbmRQaWNrZXJDaGFuZ2UoZTogYW55KSB7XG4gICAgLy8gY29uc29sZS5sb2coJ3BpY2tlcuWPkemAgemAieaLqeaUueWPmO+8jOaQuuW4puWAvOS4uicsIGUuZGV0YWlsLnZhbHVlKVxuICAgIHRoaXMuc2V0RGF0YSEoe1xuICAgICAgaW5kZXg6IHBhcnNlSW50KGUuZGV0YWlsLnZhbHVlKSxcbiAgICAgIGltZ1VybDogZ2VuSW1nVXJsKHBhcnNlSW50KGUuZGV0YWlsLnZhbHVlKSArIDEpLFxuICAgICAgbnVtc3RyOiBnZW5OdW1TdHIocGFyc2VJbnQoZS5kZXRhaWwudmFsdWUpICsgMSlcbiAgICB9KVxuICB9LFxuICAvL+eUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yid5qyh5riy5p+T5a6M5oiQXG4gIC8vIG9uUmVhZHkoKSB7XG5cbiAgLy8gfSxcblxuICAvLyDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouaYvuekulxuICAvLyBvblNob3coKSB7XG5cbiAgLy8gfSxcblxuICAvLyDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdoumakOiXj1xuICAvLyBvbkhpZGUoKSB7XG5cbiAgLy8gfSxcblxuICAvLyDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWNuOi9vVxuICAvLyBvblVubG9hZCgpIHtcblxuICAvLyB9LFxuXG4gIC8vIOmhtemdouebuOWFs+S6i+S7tuWkhOeQhuWHveaVsC0t55uR5ZCs55So5oi35LiL5ouJ5Yqo5L2cXG4gIC8vIG9uUHVsbERvd25SZWZyZXNoKCkge1xuXG4gIC8vIH0sXG5cbiAgLy8g6aG16Z2i5LiK5ouJ6Kem5bqV5LqL5Lu255qE5aSE55CG5Ye95pWwXG4gIC8vIG9uUmVhY2hCb3R0b20oKSB7XG5cbiAgLy8gfSxcblxuICAvLyDnlKjmiLfngrnlh7vlj7PkuIrop5LliIbkuqtcbiAgLy8gb25TaGFyZUFwcE1lc3NhZ2UoKSB7XG5cbiAgLy8gfVxufSkiXX0=